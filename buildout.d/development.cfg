[buildout]
extends =
    buildout.d/base.cfg
    buildout.d/build.cfg
parts +=
    stream slides server supervisor

# Generate ffmpeg config
[stream]
recipe = brodul.recipe.template
input = templates/ffmpeg.conf.jinja2
output = config/ffmpeg.conf

# Generate motion config
[slides]
recipe = brodul.recipe.template
input = templates/motion.conf.jinja2
output = config/motion.conf

device = /dev/video1
upload_url = ${http:url}/slide
path = ${buildout:directory}/slides

# Generate stream-m server config
[server]
recipe = brodul.recipe.template
input = templates/server.conf.jinja2
output = config/server.conf

port = 8090
server = http://172.16.10.127:${:port}
streams = testing production

# Setup stream-m stream options
[testing]
password = testing

[production]
password = production

# Http server options
[http]
port = 8080
url = http://localhost:${:port}

# Starts streaming server, video stream for production and one for testing.
# Start motion for motion detection and test http server
#
# Also add eventlisteners for starting and stopping testing and production stream
[supervisor]
recipe = collective.recipe.supervisor
plugins =
    superlance
http-socket = unix
file = ${buildout:directory}/var/supervisor.sock
programs =
    20 stream-m (autostart=true startsecs=2) java [-cp lib/stream-m.jar StreamingServer ${buildout:directory}/config/server.conf] ${stream-m-download:location}/dist
    10 ffmpeg-production (autostart=false startsecs=2) bash [-c "${buildout:bin-directory}/ffmpeg $(< ${buildout:directory}/config/ffmpeg.conf) ${server:server}/publish/production?password=${production:password}"] ${buildout:directory}
    10 ffmpeg-testing (autostart=false startsecs=2) bash [-c "${buildout:bin-directory}/ffmpeg $(< ${buildout:directory}/config/ffmpeg.conf) ${server:server}/publish/testing?password=${testing:password}"] ${buildout:directory}
    0  slides (autostart=false startsecs=2 startretries=3) ${buildout:bin-directory}/motion [-c ${buildout:directory}/config/motion.conf] ${buildout:directory}
    0  http  (autostart=true startsecs=2) python [${buildout:directory}/test_server.py --port ${http:port} --stream-url ${server:server}/consume/production --test-url ${server:server}/consume/testing] ${buildout:directory}
groups =
    20 production ffmpeg-production,slides
    20 testing ffmpeg-testing,slides
eventlisteners =
    httpctrl-production TICK_5 ${buildout:bin-directory}/httpctrl [-p production -b "True" ${http:url}/started ]
    httpctrl-testing TICK_5 ${buildout:bin-directory}/httpctrl [-p testing -b "True" ${http:url}/started_test ]
