[buildout]
parts =
    yasm-build
    x264-build
    ogg-build
    vorbis-build
    theora-build
    fdkaac-build
    vpx-build
    lame-build
    ffmpeg-build
    ffmpeg-install
    ffserver-install

    ffmpeg-build-motion
    libjpegturbo-build
    motion-build
    motion-install

    stream-m-download
    stream-m-build

    nginx-rtmp-module-download
    nginx-build
    nginx-install

[downloads]
yasm = http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz
ffmpeg = http://ffmpeg.org/releases/ffmpeg-1.2.tar.bz2
x264 = http://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-20130318-2245-stable.tar.bz2
libogg = http://downloads.xiph.org/releases/ogg/libogg-1.3.0.tar.gz
libvorbis = http://downloads.xiph.org/releases/vorbis/libvorbis-1.3.3.tar.gz
libtheora = http://downloads.xiph.org/releases/theora/libtheora-1.1.1.tar.bz2
fdkaac = https://github.com/mstorsjo/fdk-aac/tarball/226601a8d9
liblame = http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.5.tar.gz?use_mirror=ohv
libvpx = http://webm.googlecode.com/files/libvpx-v1.1.0.tar.bz2

libjpegturbo = http://downloads.sourceforge.net/project/libjpeg-turbo/1.2.1/libjpeg-turbo-1.2.1.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Flibjpeg-turbo%2Ffiles%2F1.2.1%2F&ts=1349857893&use_mirror=switch
motion = https://github.com/sackmotion/motion/tarball/0fb31d66c9

stream-m = https://www.github.com/yomguy/stream-m/tarball/3859206d09

nginx = http://nginx.org/download/nginx-1.2.4.tar.gz
nginx-rtmp-module = https://github.com/arut/nginx-rtmp-module/tarball/native-hls

[build]
extra-cflags="-I${buildout:directory}/parts/x264-build/include
    -I${buildout:directory}/parts/ogg-build/include
    -I${buildout:directory}/parts/theora-build/include
    -I${buildout:directory}/parts/lame-build/include
    -I${buildout:directory}/parts/fdkaac-build/include
    -I${buildout:directory}/parts/vpx-build/include
    -I${buildout:directory}/parts/vorbis-build/include"

extra-ldflags="-L${buildout:directory}/parts/x264-build/lib
    -L${buildout:directory}/parts/ogg-build/lib
    -L${buildout:directory}/parts/theora-build/lib
    -L${buildout:directory}/parts/lame-build/lib
    -L${buildout:directory}/parts/fdkaac-build/lib
    -L${buildout:directory}/parts/vpx-build/lib
    -L${buildout:directory}/parts/vorbis-build/lib"

extra-motion-ldflags=-L${buildout:directory}/parts/ffmpeg-build-motion/lib
    -L${buildout:directory}/parts/libjpegturbo-build/lib

[yasm-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:yasm}

[asmenv]
PATH = ${buildout:directory}/parts/yasm-build/bin:%(PATH)s

[x264-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:x264}
ignore-existing = true
configure-options =
    --enable-static --disable-shared --disable-lavf
environment-section =
    asmenv

[ogg-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:libogg}
configure-options =
    --enable-static --disable-shared

[vorbis-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:libvorbis}
configure-options =
    LD_LIBRARY_PATH=${buildout:directory}/parts/ogg-build/lib
    --with-ogg=${buildout:directory}/parts/ogg-build/
    --enable-static --disable-shared

[theora-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:libtheora}
configure-options =
    LD_LIBRARY_PATH=${buildout:directory}/parts/ogg-build/lib
    --with-ogg=${buildout:directory}/parts/ogg-build/
    --enable-static --disable-shared

[fdkaac-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:fdkaac}
ignore-existing = true
configure-command =
    autoreconf -fiv
    ./configure --enable-static --disable-shared --prefix ${buildout:directory}/parts/fdkaac-build

[vpx-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:libvpx}
configure-options =
    --enable-pic
environment-section =
    asmenv

[lame-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:liblame}

[ffmpeg-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:ffmpeg}
keep-compile-dir = true
ignore-existing = true
make-targets =
    install

configure-options =
    --extra-cflags=${build:extra-cflags}
    --extra-ldflags=${build:extra-ldflags}
    --enable-static --disable-shared --extra-cflags=--static --extra-version=static 
    --disable-doc --enable-gpl --enable-version3 --enable-nonfree --enable-postproc 
    --enable-filters --enable-avfilter --enable-runtime-cpudetect --enable-pthreads 
    --enable-gray --disable-debug
    --enable-libx264 --enable-libfdk-aac --enable-libmp3lame --enable-libtheora 
    --enable-libvorbis --enable-libvpx --enable-x11grab 
    --enable-indev=alsa
environment-section =
    asmenv

[ffmpeg-install]
recipe = collective.recipe.cmd
cmds = ln -fs ${buildout:directory}/parts/ffmpeg-build/bin/ffmpeg ${buildout:directory}/bin/ffmpeg
on_install = true
on_update = true

[ffserver-install]
recipe = collective.recipe.cmd
cmds = ln -fs ${buildout:directory}/parts/ffmpeg-build/bin/ffserver ${buildout:directory}/bin/ffserver
on_install = true
on_update = true

[ffmpeg-build-motion]
recipe = hexagonit.recipe.cmmi
url = ${downloads:ffmpeg}
ignore-existing = true
make-targets =
    install

configure-options =
    --enable-static --disable-shared --extra-cflags=--static --extra-version=static 
    --disable-doc --enable-gpl --enable-version3 --enable-nonfree --enable-postproc 
    --enable-filters --enable-avfilter --enable-runtime-cpudetect --enable-pthreads 
    --enable-gray --disable-debug --disable-indev=alsa --disable-outdev=alsa
environment-section =
    asmenv

[libjpegturbo-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:libjpegturbo}
configure-options =
    --enable-static --disable-shared
environment-section =
    asmenv

[motion-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:motion}
ignore-existing = true
keep-compile-dir = true
environment =
    LDFLAGS=-L${buildout:directory}/parts/ffmpeg-build-motion/lib -L${buildout:directory}/parts/libjpegturbo-build/lib
    CFLAGS=-static
    LIBS=-lpthread
configure-options =
    --with-ffmpeg=${buildout:directory}/parts/ffmpeg-build-motion/lib
    --with-ffmpeg-headers=${buildout:directory}/parts/ffmpeg-build-motion/include
    --with-jpeg-turbo=${buildout:directory}/parts/libjpegturbo-build
    --without-sdl
    --without-optimizecpu
environment-section =
    asmenv

[motion-install]
recipe = collective.recipe.cmd
cmds = ln -fs ${buildout:directory}/parts/motion-build/bin/motion ${buildout:directory}/bin/motion
on_install = true
on_update = true

[stream-m-download]
recipe = hexagonit.recipe.download
url =  ${downloads:stream-m}
strip-top-level-dir = True

[stream-m-build]
recipe = collective.recipe.ant
classpath = ${stream-m-download:location}
ant-options =
    -buildfile ${stream-m-download:location}/build.xml

[nginx-rtmp-module-download]
recipe = hexagonit.recipe.download
url =  ${downloads:nginx-rtmp-module}
strip-top-level-dir = True

[nginx-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:nginx}
ignore-existing = true
keep-compile-dir = true
configure-options =
    --add-module=${buildout:directory}/parts/nginx-rtmp-module-download
    --without-http_rewrite_module

[nginx-install]
recipe = collective.recipe.cmd
cmds = ln -fs ${nginx-build:location}/sbin/nginx ${buildout:bin-directory}
on_install = true
on_update = true

